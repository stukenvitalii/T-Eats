services:
  api-gateway:
    image: api-gateway:latest
    build:
      context: api-gateway
      args:
        DOCKER_BUILDKIT: 1
    restart: "no"
    ports:
      - "8080:8080"
  order-service:
    image: order-service:latest
    build: order-service
    restart: "no"
    ports:
      - "8082:8080"
    depends_on:
      - postgres
  restaurant-service:
    image: restaurant-service:latest
    build: restaurant-service
    restart: "no"
    ports:
      - "8083:8080"
    depends_on:
      - postgres
  user-service:
    image: user-service:latest
    build: user-service
    restart: "no"
    ports:
      - "8081:8080"
    depends_on:
      - postgres
  postgres:
    image: postgres:16.0
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eats
      TZ: Europe/Moscow
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  liquibase-migrations:
    image: liquibase/liquibase:4.25
    depends_on:
      - postgres
    command:
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgres:5432/eats
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./migrations:/liquibase/changelog
  prometheus:
    image: prom/prometheus:v3.0.1
    restart: "no"
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  grafana:
    image: grafana/grafana:11.4.0
    restart: "no"
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    healthcheck:
      test: curl --fail -s http://localhost:3000/api/health || exit 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

volumes:
  postgres_data:
  pgadmin_data: