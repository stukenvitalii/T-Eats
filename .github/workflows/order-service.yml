name: order-service-CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - .github/workflows/order-service.yml

permissions:
  packages: write
  pull-requests: write

jobs:
  build:
    permissions:
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('order-service/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install --no-transfer-progress
        working-directory: order-service

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('order-service/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests
        run: mvn test --no-transfer-progress
        working-directory: order-service

  static_analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('order-service/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  docker:
    permissions:
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install --no-transfer-progress
        working-directory: order-service

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/stukenvitalii/order-service:latest order-service  # Tag for GitHub Container Registry

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/stukenvitalii/order-service:latest

  coverage_report:
    permissions:
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Coverage
        run: |
          mvn package --no-transfer-progress
        working-directory: order-service

      - name: Upload Jacoco Coverage Report
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 65
          min-coverage-changed-files: 0
          title: Code Coverage
          update-comment: true